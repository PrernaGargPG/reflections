Q 1. When would you want to use a remote repository rather than keeping all your work local?

Ans. When I want to collaborate with others on my project. 

Q 2. Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Ans. Because there might be some changes by other contributors that I don't want to incorporate in my local repository.

Q 3. Describe the differences between forks, clones, and branches. When would you use one instead of another?

Ans. Fork is a repository that is copied from another user. Clone is a copy of a remote repository into a local machine. Branch is a new part
     of commits created in a repository so that any changes made in that path's file is independent. Forks are used to contribute in another
     user'srepostiory and clone can be used to edit code on my local machine which is easier than doing it on GitHub.

Q 4. What is the benefit of having a copy of the last known state of the remote stored locally?

Ans. You can work offline, it saves a lot of data overhead when pushing changes to github and it gives the possibility to do a quick check
     which changes are made in the online repo compared to the offline repository.

Q 5. How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Ans. I can collaborate using Dropbox, e - mail, or any other online service. It would be harder in the sense that I wont be able to keep track 
     of the changes made by other contributors or view the commit history like what changes were made or when they were made.

Q 6. When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

Ans. When I want to add or test a new feature or make some big changes in the code that could break it. It helps in always having a working
     code without having to worry about its breaking. I can freely change the code by creating new branches.
